<!DOCTYPE html>

<head>
    <meta charset="utf-8">
    <script src="https://d3js.org/d3.v4.min.js"></script>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">

    <title>D3.js SVG Clouds Generator</title>
    <script src='/js/d3.v6.min.js'></script>
    <script src='/js/chroma.min.js'></script>
    <script src='/js/lodash.min.js'></script>

    <!--<link rel='stylesheet' href='/css/null.css' />-->

    <link rel='stylesheet' href='/css/bootstrap4-toggle.min.css' />

    <!-- Bootstrap CSS CDN -->
    <link rel="stylesheet" href="/css/bootstrap.min.css" crossorigin="anonymous">
    <!-- Our Custom CSS -->
    <link rel="stylesheet" href="style3.css">
    <!-- Scrollbar Custom CSS -->
    <link rel="stylesheet" href="/css/jquery.mCustomScrollbar.css">

    <script src='/js/f4afbaa213.js' crossorigin='anonymous'></script>

    <script src="/js/jquery.min.js" crossorigin="anonymous"></script>

    <script src="/js/popper.min.js" crossorigin="anonymous"></script>

    <script src="/js/bootstrap.min.js" crossorigin="anonymous"></script>

    <script src="/js/jquery.mCustomScrollbar.concat.min.js"></script>
    <script src='/js/bootstrap4-toggle.min.js'></script>
    <style>

    </style>
</head>

<body>
    <script>
        const win = window;

        const width = win.innerWidth;
        const height = win.innerHeight;

        const theta = Math.PI * (3 - Math.sqrt(5));

        const radius = 6;
        const step = radius * 1.5;

        const data = Array.from({
            length: 20000
        }, (_, i) => {

            const radius = step * Math.sqrt(i += 0.5),
                a = theta * i;

            return {
                x: width / 2 + radius * Math.cos(a),
                y: height / 2 + radius * Math.sin(a)
            };
        });


        const svg = d3.select('body').append('svg')
            .attr('viewBox', [0, 0, width, height]);

        const g = svg.append('g')
            .attr('cursor', 'grab');

        g.selectAll('circle')
            .data(data)
            .join('circle')
            .attr('cx', ({
                x
            }) => x)
            .attr('cy', ({
                y
            }) => y)
            .attr('r', radius)
            .attr('fill', (d, i) => d3.interpolateRainbow(i / 360))
            .call(d3.drag()
                .on('start', dragstarted)
                .on('drag', dragged)
                .on('end', dragended));

        svg.call(d3.zoom()
            .extent([
                [0, 0],
                [width, height]
            ])
            .scaleExtent([1, 24])
            .on('zoom', zoomed));

        function dragstarted() {
            d3.select(this).raise();
            g.attr('cursor', 'grabbing');
        }

        function dragged(event, d) {
            d3.select(this).attr('cx', d.x = event.x).attr('cy', d.y = event.y);
        }

        function dragended() {
            g.attr('cursor', 'grab');
        }

        function zoomed({
            transform
        }) {
            g.attr('transform', transform);
        }
    </script>
</body>