<!DOCTYPE html>
<html>

<head>
    <meta charset='utf-8'>
    <title>D3's Hello World</title>
    <script src='/js/d3.v6.min.js'></script>
    <link rel='stylesheet' href='/css/null.css' />
    <style>
        .axis path,
        .axis line {
            fill: none;
            stroke: #333;
        }
        
        .axis .grid-line {
            stroke: #000;
            stroke-opacity: 0.2;
        }
        
        .axis text {
            font: 10px Verdana;
        }
        
        .bar {
            /*stroke: none;*/
        }
        
        svg {
            position: absolute;
            top: 0;
            left: 0;
        }
    </style>
</head>

<body style='background-color: #01040a'>

    <script>
        const win = window;

        let width = win.innerWidth - 0;
        let height = win.innerHeight - 7;

        //https://mdigi.tools/color-shades/#061639
        let colors = [
            '#f5f8fe',
            '#e2eafc',
            '#cfdcfa',
            '#bccff8',
            '#a8c1f6',
            '#95b3f4',
            '#82a5f2',
            '#6f97f0',
            '#5c89ee',
            '#487cec',
            '#356eea',
            '#2260e8',
            '#1755dd',
            '#154eca',
            '#1346b7',
            '#113fa3',
            '#0f3890',
            '#0d307d',
            '#0b296a',
            '#092157',
            '#071a43',
            '#051330',
            '#030b1d',
            '#01040a'
        ];

        let margin = 0,
            padding = 0,
            data = [{
                x: 1,
                y: 10
            }];
        let data2 = [{
            x: 1,
            y: 35
        }, {
            x: 2,
            y: 37
        }, {
            x: 3,
            y: 24
        }, {
            x: 4,
            y: 33
        }, {
            x: 5,
            y: 26
        }, {
            x: 6,
            y: 24
        }, {
            x: 7,
            y: 26
        }, {
            x: 8,
            y: 19
        }, {
            x: 9,
            y: 22
        }, {
            x: 10,
            y: 38
        }, {
            x: 11,
            y: 50
        }, {
            x: 12,
            y: 47
        }];

        let data3 = [{
            x: 1,
            y: 35
        }, {
            x: 2,
            y: 47
        }, {
            x: 3,
            y: 54
        }, {
            x: 4,
            y: 43
        }, {
            x: 5,
            y: 36
        }, {
            x: 6,
            y: 24
        }, {
            x: 7,
            y: 26
        }, {
            x: 8,
            y: 29
        }, {
            x: 9,
            y: 32
        }, {
            x: 10,
            y: 48
        }, {
            x: 11,
            y: 60
        }, {
            x: 12,
            y: 57
        }, {
            x: 13,
            y: 50
        }];

        let data4 = [{
            x: 1,
            y: 45
        }, {
            x: 2,
            y: 57
        }, {
            x: 3,
            y: 64
        }, {
            x: 4,
            y: 53
        }, {
            x: 5,
            y: 46
        }, {
            x: 6,
            y: 24
        }, {
            x: 7,
            y: 26
        }, {
            x: 8,
            y: 29
        }, {
            x: 9,
            y: 32
        }, {
            x: 10,
            y: 78
        }, {
            x: 11,
            y: 70
        }, {
            x: 12,
            y: 67
        }, {
            x: 13,
            y: 60
        }, {
            x: 14,
            y: 56
        }];

        let data5 = [{
            x: 1,
            y: 55
        }, {
            x: 2,
            y: 67
        }, {
            x: 3,
            y: 74
        }, {
            x: 4,
            y: 63
        }, {
            x: 5,
            y: 56
        }, {
            x: 6,
            y: 24
        }, {
            x: 7,
            y: 26
        }, {
            x: 8,
            y: 29
        }, {
            x: 9,
            y: 42
        }, {
            x: 10,
            y: 88
        }, {
            x: 11,
            y: 80
        }, {
            x: 12,
            y: 77
        }, {
            x: 13,
            y: 70
        }, {
            x: 14,
            y: 66
        }, {
            x: 15,
            y: 47
        }, {
            x: 16,
            y: 68
        }];

        let svg = d3.select("body").append("svg")
            .attr("class", "axis")
            .attr("viewBox", "0 0 " + width + " " + height)
            .attr("width", width)
            .attr("height", height);

        win.onresize = () => {
            svg.attr("width", win.innerWidth);
            svg.attr("height", win.innerHeight);
        };

        // длина оси X= ширина контейнера svg - отступ слева и справа
        let xAxisLength = width - 2 * margin;

        // длина оси Y = высота контейнера svg - отступ сверху и снизу
        let yAxisLength = height - 2 * margin;

        // функция интерполяции значений на ось Х  
        let scaleXAxisFromData = (data) => {
            return d3.scaleLinear()
                .domain([1, data.length + 1])
                .range([0, xAxisLength]);
        };

        let scaleX = scaleXAxisFromData(data);
        let scaleX2 = scaleXAxisFromData(data2);
        let scaleX3 = scaleXAxisFromData(data3);
        let scaleX4 = scaleXAxisFromData(data4);
        let scaleX5 = scaleXAxisFromData(data5);

        // функция интерполяции значений на ось Y
        let scaleY = d3.scaleLinear()
            .domain([100, 0])
            .range([0, yAxisLength]);

        let defs = svg.append("defs");


        function createBackgroundGradient(mainColor, gradientColor) {

            let whiteGradient = defs.append("linearGradient")
                .attr("id", "whiteGradient")
                .attr("x1", "0%")
                .attr("y1", "0%")
                .attr("x2", "0%")
                .attr("y2", "100%");

            whiteGradient.append("stop")
                .attr("offset", "0")
                .attr("stop-color", gradientColor)
                .attr("stop-opacity", "0.25");

            whiteGradient.append("stop")
                .attr("offset", "1")
                .attr("stop-color", gradientColor)
                .attr("stop-opacity", "1");

            let gradientMask = defs.append("mask")
                .attr("id", "gradientMask");

            let rectMask = gradientMask.append("rect")
                .attr("x", "0")
                .attr("y", "0")
                .attr("width", width)
                .attr("height", height)
                .attr("fill", "url(#whiteGradient)");

            svg.append("rect")
                .attr("x", "0")
                .attr("y", "0")
                .attr("width", width)
                .attr("height", height)
                .attr("fill", mainColor)
                .attr("mask", "url(#gradientMask)");
        }

        createBackgroundGradient(colors[8], "white"); // "#061639"

        let gradientData1 = {
            id: "Gradient1",
            x1: "0",
            x2: "0",
            y1: "0",
            y2: "1",
            stops: [{
                "offset": "0%",
                "stop-color": colors[colors.length - 18],
                "stop-opacity": "1"
            }, {
                "offset": "55%",
                "stop-color": colors[colors.length - 18],
                "stop-opacity": "1"
            }, {
                "offset": "100%",
                "stop-color": colors[colors.length - 4],
                "stop-opacity": "1"
            }]
        };
        let gradientData2 = {
            id: "Gradient2",
            x1: "0",
            x2: "0",
            y1: "0",
            y2: "1",
            stops: [{
                "offset": "0%",
                "stop-color": colors[colors.length - 14],
                "stop-opacity": "1"
            }, {
                "offset": "40%",
                "stop-color": colors[colors.length - 14],
                "stop-opacity": "1"
            }, {
                "offset": "100%",
                "stop-color": colors[colors.length - 18],
                "stop-opacity": "1"
            }]
        };
        let gradientData3 = {
            id: "Gradient3",
            x1: "0",
            x2: "0",
            y1: "0",
            y2: "1",
            stops: [{
                "offset": "0%",
                "stop-color": colors[colors.length - 10],
                "stop-opacity": "1"
            }, {
                "offset": "60%",
                "stop-color": colors[colors.length - 10],
                "stop-opacity": "1"
            }, {
                "offset": "100%",
                "stop-color": colors[colors.length - 14],
                "stop-opacity": "1"
            }]
        };
        let gradientData4 = {
            id: "Gradient4",
            x1: "0",
            x2: "0",
            y1: "0",
            y2: "1",
            stops: [{
                "offset": "0%",
                "stop-color": colors[colors.length - 6],
                "stop-opacity": "1"
            }, {
                "offset": "80%",
                "stop-color": colors[colors.length - 7],
                "stop-opacity": "1"
            }, {
                "offset": "100%",
                "stop-color": colors[colors.length - 8],
                "stop-opacity": "0.5"
            }]
        };
        let gradientData5 = {
            id: "Gradient5",
            x1: "0",
            x2: "0",
            y1: "0",
            y2: "1",
            stops: [{
                "offset": "0%",
                "stop-color": colors[colors.length - 2],
                "stop-opacity": "1"
            }, {
                "offset": "95%",
                "stop-color": colors[colors.length - 2],
                "stop-opacity": "1"
            }, {
                "offset": "100%",
                "stop-color": colors[colors.length - 3],
                "stop-opacity": "1"
            }]
        };

        function createGradient(data) {
            let Gradient = defs.append("linearGradient")
                .attr("id", data.id)
                .attr("x1", data.x1)
                .attr("x2", data.x2)
                .attr("y1", data.y1)
                .attr("y2", data.y2);

            d3.select('#' + data.id).selectAll("stop").data(data.stops).enter().append("stop");
            d3.select('#' + data.id).selectAll('stop').data(data.stops).attr("offset", function(d) {
                return d['offset'];
            });
            d3.select('#' + data.id).selectAll('stop').data(data.stops).attr("stop-color", function(d) {
                return d['stop-color'];
            });
            d3.select('#' + data.id).selectAll('stop').data(data.stops).attr("stop-opacity", function(d) {
                return d['stop-opacity'];
            });
            d3.select('#' + data.id).selectAll('stop').data(data.stops).exit().remove();

            return Gradient;
        }

        createGradient(gradientData1);
        createGradient(gradientData2);
        createGradient(gradientData3);
        createGradient(gradientData4);
        createGradient(gradientData5);

        function createLayer(index, data, fill, stroke, scaleX, scaleY) {
            let m = defs.append("mask")
                .attr("id", "Mask" + index);

            // создаем объект g для прямоугольников
            let g = m.append("g")
                .attr("class", "body")
                .attr("transform", // сдвиг объекта вправо
                    "translate(" + margin + ", 0 )");
            // связываем данные с прямоугольниками

            g.selectAll("rect.bar")
                .data(data)
                .enter()
                .append("rect")
                .attr("class", "bar")
                .attr("fill", fill)
                .attr("stroke", stroke);

            // устанавливаем параметры прямоугольников
            g.selectAll("rect.bar")
                .data(data)
                .attr("x", function(d) {
                    return scaleX(d.x);
                })
                .attr("y", function(d) {
                    return scaleY(d.y) + margin;
                })
                .attr("height", function(d) {
                    return yAxisLength - scaleY(d.y);
                })
                .attr("width", function(d) {

                    return Math.floor(xAxisLength / data.length) - padding;
                });

            let r = svg.append("rect")
                .attr("id", "Rect" + index)
                .attr("x", "0")
                .attr("y", "0")
                .attr("width", width)
                .attr("height", height)
                //.attr("fill", "url(#Gradient" + index + ")")
                .attr("fill", "url(#Gradient" + index + ")")
                .attr("mask", "url(#Mask" + index + ")");

        }

        let colorindex = colors.length - 0;
        let reverse = -1;
        /*
                createLayer(1, data5, colors[colorindex + 16 * reverse], colors[colorindex + 16 * reverse], scaleX5, scaleY);

                createLayer(2, data4, colors[colorindex + 12 * reverse], colors[colorindex + 12 * reverse], scaleX4, scaleY);

                createLayer(3, data3, colors[colorindex + 8 * reverse], colors[colorindex + 8 * reverse], scaleX3, scaleY);

                createLayer(4, data2, colors[colorindex + 4 * reverse], colors[colorindex + 4 * reverse], scaleX2, scaleY);

                createLayer(5, data, colors[colorindex], colors[colorindex], scaleX, scaleY);
                */

        createLayer(1, data5, "#fff", "#fff", scaleX5, scaleY);

        createLayer(2, data4, "#fff", "#fff", scaleX4, scaleY);

        createLayer(3, data3, "#fff", "#fff", scaleX3, scaleY);

        createLayer(4, data2, "#fff", "#fff", scaleX2, scaleY);

        createLayer(5, data, "#fff", "#fff", scaleX, scaleY);
    </script>
</body>

</html>